name: master-SkFileBlogNew-cicd

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      commit_id: ${{ steps.set_commit_id.outputs.commit_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Shorten commit id
        id: set_commit_id
        run: echo "commit_id=${GITHUB_SHA::6}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx--
          restore-keys: |
            buildx--

      - name: Login to Gitea Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.GITEA_REGISTRY }}
          username: ${{ secrets.GITEA_USERNAME }}
          password: ${{ secrets.GITEA_PAT }}

      - name: Build and push to Gitea Registry
        uses: docker/build-push-action@v6
        with:
          context: ./SkFileBlogSystem/SkFileBlogSystem
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.GITEA_REGISTRY }}/silverkeytech/skfileblognew/master:${{ steps.set_commit_id.outputs.commit_id }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install yq
        run: pip install yq

      - name: Modify values file
        run: |
          yq -i -y '
            .image.repository = "registry.arc-center.run/silverkeytech/skfileblognew/master" |
            .image.tag = "${{ needs.ci.outputs.commit_id }}"
          ' charts/SkFileBlogNew/values-dev.yaml

      - name: Commit and push changes using personal access token
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          git config --global --unset credential.helper || true
          git config --global user.name "yassienE4"
          git config --global user.email "yassienE4K@users.noreply.github.com"
          git add charts/SkFileBlogNew/values-dev.yaml
          git commit -m "Updates values.yaml with commit ${{ needs.ci.outputs.commit_id }}" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GIT_TOKEN}@github.com/yassienE4/SkFileBlogNew.git
          git pull origin master --rebase
          git push origin master

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: Login to ArgoCD
        run: |
          argocd login argocd.arc-center.run \
            --insecure \
            --grpc-web \
            --username admin \
            --password "${{ secrets.ARGOCD_PASSWORD }}"

      - name: Ensure ArgoCD repo and app
        run: |
          repo_url="https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/yassienE4/SkFileBlogNew.git"
          app_name="master-SkFileBlogNew"

          argocd repo add "$repo_url" --type git --name SkFileBlogNew-repo || true

          argocd app create "$app_name" \
            --repo SkFileBlogNew-repo \
            --path charts/SkFileBlogNew \
            --dest-namespace dev \
            --dest-server https://kubernetes.default.svc \
            --values values-dev.yaml \
            --revision master \
            --sync-policy manual \
            --sync-option CreateNamespace=true || true

      - name: ArgoCD app sync
        run: |
          app_name="master-SkFileBlogNew"
          argocd app sync $app_name
          argocd app wait $app_name --timeout 180
